<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>9</version>
	</parent>

	<groupId>org.jmxtrans</groupId>
	<artifactId>jmxtrans</artifactId>
	<version>251-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>jmxtrans</name>
	<description>JMX metrics exporter</description>

	<url>http://www.jmxtrans.org</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>1</id>
			<name>Jon Stevens</name>
			<email>latchkey@gmail.com</email>
		</developer>
		<developer>
			<id>2</id>
			<name>Henri Gomez</name>
			<email>henri.gomez@gmail.com</email>
		</developer>
		<developer>
			<id>3</id>
			<name>Cyrille Le Clerc</name>
			<email>cleclerc@cloudbees.com</email>
		</developer>
		<developer>
			<id>gehel</id>
			<name>Guillaume Lederrey</name>
			<email>guillaume.lederrey@gmail.com</email>
			<url>http://slashdevslashrandom.wordpress.com/</url>
			<organization>Nestl√© Nespresso SA</organization>
			<organizationUrl>http://www.nespresso.com</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<prerequisites>
		<maven>3.0.4</maven>
	</prerequisites>

	<scm>
		<connection>scm:git:git@github.com:jmxtrans/jmxtrans.git</connection>
		<developerConnection>scm:git:git@github.com:jmxtrans/jmxtrans.git</developerConnection>
		<tag>HEAD</tag>
		<url>https://github.com/jmxtrans/jmxtrans</url>
	</scm>

	<distributionManagement>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<!--
			Maximum number of checkstyle violations allowed. Build will fail
			if there are more than this number of violations. Feel free to
			increase this number if you have a reason. The goal is not to be
			dogmatic, but to provide consistency in the code.
		-->
		<checkstyle.max.allowed.violations>0</checkstyle.max.allowed.violations>
		<github.global.server>github</github.global.server>
		<!-- some versions used by multiple dependencies -->
		<jackson.version>2.5.1</jackson.version>
		<jsw.dir>${project.build.directory}/generated-resources/appassembler/jsw/${package.daemon.name}</jsw.dir>
		<main.class>com.googlecode.jmxtrans.JmxTransformer</main.class>
		<maven.build.timestamp.format>yyMMdd_HHmm</maven.build.timestamp.format>
		<package.daemon.name>${project.artifactId}</package.daemon.name>
		<package.group>${project.artifactId}</package.group>
		<package.install.dir>/usr/share/${project.artifactId}</package.install.dir>
		<package.user>${project.artifactId}</package.user>
		<packageBuildTimeStamp>${maven.build.timestamp}</packageBuildTimeStamp>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.2</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.1.2</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-cloudwatch</artifactId>
			<version>1.9.23</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-core</artifactId>
			<version>1.9.23</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-guava</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>4.0-beta5</version>
		</dependency>

		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.6</version>
		</dependency>

		<dependency>
			<groupId>info.ganglia.gmetric4j</groupId>
			<artifactId>gmetric4j</artifactId>
			<version>1.0.10</version>
		</dependency>

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<dependency>
			<groupId>net.sf.jpathwatch</groupId>
			<artifactId>jpathwatch</artifactId>
			<version>0.95</version>
		</dependency>

		<!-- JEXL support for configurable naming strategy expressions -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-jexl</artifactId>
			<version>2.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>animal-sniffer-annotations</artifactId>
			<version>1.14</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.jrobin</groupId>
			<artifactId>jrobin</artifactId>
			<version>1.5.9</version>
		</dependency>

		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>1.8.6</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.10</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.10</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>annotations</artifactId>
			<version>3.0.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<!--
				There is no compile time dependency on acplt. There might be a runtime dependency that I did not
				identify yet, so let's keep it for the moment. After further analysis, we might be able to remove it.
			-->
			<groupId>org.acplt</groupId>
			<artifactId>oncrpc</artifactId>
			<version>1.0.7</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<!--
				AWS CloudWatch needs a recent version of http client.
			-->
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.6</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<!--
				There is no compile time dependency on jgit. There might be a runtime dependency that I did not
				identify yet, so let's keep it for the moment. After further analysis, we might be able to remove it.
			-->
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>3.7.0.201502260915-r</version>
			<scope>runtime</scope>
		</dependency>

		<!-- JSR160 (JMX Remoting) protocol -->
		<dependency>
			<!--
				There is no compile time dependency on jboss remoting. There might be a runtime dependency that I did not
				identify yet, so let's keep it for the moment. After further analysis, we might be able to remove it.
			-->
			<groupId>org.jboss.remoting3</groupId>
			<artifactId>remoting-jmx</artifactId>
			<version>1.0.1.Final</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<!--
				There is no compile time dependency on jboss remoting. There might be a runtime dependency that I did not
				identify yet, so let's keep it for the moment. After further analysis, we might be able to remove it.
			-->
			<groupId>org.jboss.remotingjmx</groupId>
			<artifactId>remoting-jmx</artifactId>
			<version>2.0.1.CR1</version>
			<scope>runtime</scope>
		</dependency>

		<!-- UNIT TESTING -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<!--
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.0.5-beta</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.6.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-core</artifactId>
			<version>1.6.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.6.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-reflect</artifactId>
			<version>1.6.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>src</directory>
				<includes>
					<include>logback.xml</include>
					<include>quartz.server.properties</include>
				</includes>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>test</directory>
				<includes>
					<include>example.json</include>
					<include>booleanTest.json</include>
				</includes>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<!--
						version 0.11 seem to have some problem to publish, let's wait until 0.12 to upgrade
					-->
					<version>0.10</version>
				</plugin>
				<plugin>
					<groupId>com.google.code.sortpom</groupId>
					<artifactId>maven-sortpom-plugin</artifactId>
					<version>2.3.0</version>
				</plugin>
				<plugin>
					<groupId>net.ju-n.maven.plugins</groupId>
					<artifactId>checksum-maven-plugin</artifactId>
					<version>1.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>2.15</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.6.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.6</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<goals>
								<goal>sign</goal>
							</goals>
							<phase>verify</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.1</version>
					<configuration>
						<preparationGoals>sortpom:sort clean verify</preparationGoals>
						<goals>deploy</goals>
						<releaseProfiles>gpg,deb,rpm</releaseProfiles>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>animal-sniffer-maven-plugin</artifactId>
					<version>1.14</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>appassembler-maven-plugin</artifactId>
					<version>1.9</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>rpm-maven-plugin</artifactId>
					<version>2.1.2</version>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>1.1.4</version>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.5</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<configuration>
					<message>Creating site for ${project.name}
						${project.version}</message>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>site</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.google.code.sortpom</groupId>
				<artifactId>maven-sortpom-plugin</artifactId>
				<configuration>
					<predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
					<sortDependencies>scope,groupId,artifactId</sortDependencies>
					<sortPlugins>groupId,artifactId</sortPlugins>
					<lineSeparator>\n</lineSeparator>
					<encoding>${project.build.sourceEncoding}</encoding>
					<sortProperties>true</sortProperties>
					<keepBlankLines>true</keepBlankLines>
					<nrOfIndentSpace>-1</nrOfIndentSpace>
					<verifyFail>Stop</verifyFail>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>verify</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.ju-n.maven.plugins</groupId>
				<artifactId>checksum-maven-plugin</artifactId>
				<configuration>
					<algorithms>
						<algorithm>MD5</algorithm>
						<algorithm>SHA-1</algorithm>
						<algorithm>SHA-256</algorithm>
					</algorithms>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>artifacts</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<configLocation>src/etc/checkstyle.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<maxAllowedViolations>${checkstyle.max.allowed.violations}</maxAllowedViolations>
				</configuration>
				<executions>
					<execution>
						<id>checkstyle-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>de.andrena.tools.nopackagecycles</groupId>
						<artifactId>no-package-cycles-enforcer-rule</artifactId>
						<version>1.0.5</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>enforce-no-package-cycles</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<phase>test-compile</phase>
						<configuration>
							<rules>
								<NoPackageCyclesRule implementation="de.andrena.tools.nopackagecycles.NoPackageCyclesRule" />
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.2</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>shade</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<filters>
								<filter>
									<!--
										Signature files from other jars, if included, prevent the "all" jar from starting with:
										"java.lang.SecurityException: Invalid signature file digest for Manifest main attributes"
										This filter excludes signatures files from other signed jars.
										Specifically avoid including ECLISPE_.* from org.eclipse.jgit.
									-->
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>all</shadedClassifierName>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>${main.class}</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<?SORTPOM IGNORE?>
			<!-- assembly has to run after shade -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<tarLongFileMode>posix</tarLongFileMode>
					<descriptors>
						<descriptor>src/assembly/dist.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<goals>
							<goal>single</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
			<?SORTPOM RESUME?>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/Test*.java</include>
						<include>**/*Test.java</include>
						<include>**/*TestCase.java</include>
						<include>**/*Tests.java</include>
					</includes>
					<systemPropertyVariables>
						<jmxtrans.log.dir>${project.build.directory}</jmxtrans.log.dir>
						<myhost>w2</myhost>
						<myport>1099</myport>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-maven-plugin</artifactId>
				<configuration>
					<signature>
						<groupId>org.codehaus.mojo.signature</groupId>
						<artifactId>java16</artifactId>
						<version>1.1</version>
					</signature>
				</configuration>
				<executions>
					<execution>
						<id>animal-sniffer-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>test</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<configuration>
					<daemons>
						<daemon>
							<id>${package.daemon.name}</id>
							<mainClass>${main.class}</mainClass>
							<commandLineArguments>
								<commandLineArgument>-j</commandLineArgument>
								<commandLineArgument>/var/lib/${project.artifactId}</commandLineArgument>
							</commandLineArguments>
							<jvmSettings>
								<extraArguments>
									<extraArgument>-Dcom.sun.management.jmxremote</extraArgument>
									<extraArgument>-Dcom.sun.management.jmxremote.ssl=false</extraArgument>
									<extraArgument>-Dcom.sun.management.jmxremote.authenticate=false</extraArgument>
									<extraArgument>-Dcom.sun.management.jmxremote.port=2101</extraArgument>
								</extraArguments>
							</jvmSettings>
							<platforms>
								<platform>jsw</platform>
							</platforms>
							<generatorConfigurations>
								<generatorConfiguration>
									<generator>jsw</generator>
									<includes>
										<include>linux-x86-32</include>
										<include>linux-x86-64</include>
									</includes>
									<configuration>
										<wrapper.pidfile>/var/run/${package.daemon.name}</wrapper.pidfile>
										<property>
											<name>run.as.user.envvar</name>
											<value>${package.user}</value>
										</property>
										<property>
											<name>wrapper.logfile</name>
											<value>/var/log/${package.daemon.name}/${project.artifactId}.log</value>
										</property>
									</configuration>
								</generatorConfiguration>
							</generatorConfigurations>
						</daemon>
					</daemons>
					<programs>
						<program>
							<mainClass>${main.class}</mainClass>
							<id>${project.artifactId}</id>
						</program>
					</programs>
				</configuration>
				<executions>
					<execution>
						<id>appassembler</id>
						<goals>
							<goal>assemble</goal>
							<goal>generate-daemons</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<configuration>
					<check>
						<branchRate>0</branchRate>
						<lineRate>0</lineRate>
						<packageBranchRate>0</packageBranchRate>
						<packageLineRate>0</packageLineRate>
						<totalBranchRate>30</totalBranchRate>
						<totalLineRate>33</totalLineRate>
					</check>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<configuration>
					<effort>Max</effort>
					<threshold>Default</threshold>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<configuration>
					<mutators>
						<mutator>DEFAULTS</mutator>
						<mutator>REMOVE_CONDITIONALS</mutator>
						<mutator>INLINE_CONSTS</mutator>
						<mutator>NON_VOID_METHOD_CALLS</mutator>
						<mutator>CONSTRUCTOR_CALLS</mutator>
					</mutators>
					<mutationThreshold>26</mutationThreshold>
					<coverageThreshold>34</coverageThreshold>
					<historyInputFile>${project.basedir}/pitest-history.xml</historyInputFile>
					<historyOutputFile>${project.build.directory}/pitest-history.xml</historyOutputFile>
					<jvmArgs>
						<value>-XX:MaxPermSize=256M</value>
					</jvmArgs>
					<targetClasses>
						<param>com.googlecode.jmxtrans.*</param>
					</targetClasses>
					<timestampedReports>false</timestampedReports>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
			</plugin>
		</plugins>

		<sourceDirectory>src</sourceDirectory>
		<testSourceDirectory>test</testSourceDirectory>

	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.15</version>
				<configuration>
					<configLocation>src/etc/checkstyle.xml</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.2</version>
				<configuration>
					<links>
						<link>http://docs.oracle.com/javase/6/docs/api</link>
						<link>http://commons.apache.org/pool/api-1.6</link>
						<link>http://fasterxml.github.io/jackson-annotations/javadoc/2.4</link>
						<link>http://fasterxml.github.io/jackson-core/javadoc/2.4</link>
						<link>http://fasterxml.github.io/jackson-databind/javadoc/2.4</link>
						<link>http://docs.guava-libraries.googlecode.com/git-history/release/javadoc</link>
					</links>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.4</version>
				<configuration>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<targetJdk>1.6</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.8</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>license</report>
							<report>project-team</report>
							<report>scm</report>
							<report>summary</report>
							<report>dependencies</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.18.1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<effort>Max</effort>
					<threshold>Exp</threshold>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>Todo Work</displayName>
								<tags>
									<tag>
										<matchString>todo</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>@todo</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>fixme</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>@fixme</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.1</version>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>withMutationTests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<executions>
							<execution>
								<id>pitest</id>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!--
				RPM packaging is done in a profile to ensure that it does not impact build on platforms not supporting
				RPM tools. Once we are happy with how this works, we could probably autoactivate this profile if
				appropriate tools are detected on the system.
			-->
			<id>rpm</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>rpm-maven-plugin</artifactId>
						<configuration>
							<group>Applications/Communications</group>
							<defineStatements>
								<!--
									The package contains Tanukisoft libs for multiple architectures. Multi-arch package
									do not exist, so we *should* split this package in a jmxtrans-common package
									plus an arch specific package for each architecture, containing only the Tanukisoft
									libraries. I think this is overkill, so let's create a non compliant noarch package.
								-->
								<defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
							</defineStatements>
							<preinstallScriptlet>
								<script>if [ $1 = 1 ]; then
                  USER_ID=`id -u %{package.user} 2&gt;/dev/null`
                    if [ -z "$USER_ID" ]; then
									    /usr/sbin/useradd -c "${project.name}" -s /bin/sh -r -d \
									    ${package.install.dir} -U ${package.user}
                    fi
									fi</script>
							</preinstallScriptlet>
							<postinstallScriptlet>
								<script>/sbin/chkconfig --add ${package.daemon.name}</script>
							</postinstallScriptlet>
							<preremoveScriptlet>
								<script>if [ $1 = 0 ]; then
									/sbin/service ${package.daemon.name} stop
									/sbin/chkconfig --del ${package.daemon.name}
									/usr/sbin/userdel ${package.user}
									fi</script>
							</preremoveScriptlet>
							<requires>
								<require>java</require>
							</requires>
							<mappings>
								<mapping>
									<directory>${package.install.dir}/etc</directory>
									<sources>
										<source>
											<location>${jsw.dir}/etc</location>
										</source>
									</sources>
								</mapping>
								<mapping>
									<directory>${package.install.dir}/bin</directory>
									<filemode>755</filemode>
									<sources>
										<source>
											<location>${jsw.dir}/bin</location>
											<excludes>
												<exclude>*.bat</exclude>
											</excludes>
										</source>
									</sources>
								</mapping>
								<mapping>
									<directory>${package.install.dir}/lib</directory>
									<sources>
										<source>
											<location>${jsw.dir}/lib</location>
										</source>
									</sources>
								</mapping>
								<mapping>
									<directory>${package.install.dir}/tools</directory>
									<sources>
										<source>
											<location>${project.basedir}/tools</location>
										</source>
									</sources>
								</mapping>
								<mapping>
									<directory>/usr/bin</directory>
									<directoryIncluded>false</directoryIncluded>
									<filemode>755</filemode>
									<sources>
										<source>
											<location>${project.basedir}/bin/</location>
										</source>
									</sources>
								</mapping>
								<mapping>
									<directory>/etc/${package.daemon.name}</directory>
									<configuration>true</configuration>
									<sources>
										<softlinkSource>
											<location>${package.install.dir}/etc</location>
										</softlinkSource>
									</sources>
								</mapping>
								<mapping>
									<directory>/etc/init.d</directory>
									<sources>
										<softlinkSource>
											<location>${package.install.dir}/bin/${package.daemon.name}</location>
										</softlinkSource>
									</sources>
								</mapping>
								<mapping>
									<directory>/var/lib/${project.artifactId}</directory>
								</mapping>
								<mapping>
									<directory>/var/log/${package.daemon.name}</directory>
									<username>${package.user}</username>
									<groupname>${package.group}</groupname>
								</mapping>
								<mapping>
									<directory>/var/run/${package.daemon.name}</directory>
									<username>${package.user}</username>
									<groupname>${package.group}</groupname>
								</mapping>
							</mappings>
						</configuration>
						<executions>
							<execution>
								<id>attach-rpm</id>
								<goals>
									<goal>attached-rpm</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>gpg</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>deb</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.vafer</groupId>
						<artifactId>jdeb</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<goals>
									<goal>jdeb</goal>
								</goals>
								<configuration>
									<skipPOMs>true</skipPOMs>
									<deb>${project.build.directory}/${project.artifactId}-${project.version}.deb</deb>
									<dataSet>
										<data>
											<src>${project.build.directory}/jmxtrans-${project.version}-dist.tar.gz</src>
											<type>archive</type>
											<mapper>
												<type>perm</type>
												<prefix>/usr/share/jmxtrans</prefix>
												<user>jmxtrans</user>
												<group>jmxtrans</group>
												<strip>1</strip>
											</mapper>
										</data>
										<data>
											<src>${project.basedir}/src/deb/init.d/</src>
											<type>directory</type>
											<excludes>.DS_Store</excludes>
											<mapper>
												<type>perm</type>
												<prefix>/etc/init.d</prefix>
												<filemode>755</filemode>
												<user>root</user>
												<group>root</group>
											</mapper>
										</data>
									</dataSet>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
